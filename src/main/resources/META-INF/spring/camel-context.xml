<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<bean id="properties"
		class="org.apache.camel.component.properties.PropertiesComponent">
		<property name="location" value="formatter.properties" />
	</bean>

	<camel:camelContext id="camelContext" autoStartup="false">
		<camel:routeBuilder ref="formatterRouteBuilder" />
	</camel:camelContext>

	<bean id="formatter" class="fr.kdefombelle.formatter.Formatter" />
	<bean id="formatterRouteBuilder" class="fr.kdefombelle.formatter.FormatterRouteBuilder" />
	<bean id="formatterXmlModelCreator" class="fr.kdefombelle.formatter.FreemarkerXmlModelCreator" />

	<bean id="fileStore" class="org.apache.camel.processor.idempotent.FileIdempotentRepository">
		<!-- the filename for the store -->
		<property name="fileStore" value="target/fileidempotent/.filestore.dat" />
		<!-- the max filesize in bytes for the file. Camel will trunk and flush 
			the cache if the file gets bigger -->
		<property name="maxFileStoreSize" value="512000" />
		<!-- the number of elements in our store -->
		<property name="cacheSize" value="7000" />
	</bean>

	<!--constructor-arg index="0" value="${murex.reporting.user}" / -->

</beans>
